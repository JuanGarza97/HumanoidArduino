/*
  Humanoid.h - Library for motor control.
  Created by Juan Carlos Garza SÃ¡nchez, August 8, 2015.
*/

#ifndef Humanoid_h
#define Humanoid_h

#include "Arduino.h"

class Humanoid
{
  public:
    Humanoid();
    void Head(int pin1);
    void Head(int pin1, int pin2);
    void Head(int S[]);
    void Head(int S[][2]);
    
    void Arm_R(int pin1, int pin2);
    void Arm_R(int pin1, int pin2, int pin3);
    void Arm_R(int pin1, int pin2, int pin3, int pin4);
    void Arm_R(int S[][2]);
    void Arm_R(int S[][3]);
    void Arm_R(int S[][4]);
    
    void Arm_L(int pin1, int pin2);
    void Arm_L(int pin1, int pin2,int pin3);
    void Arm_L(int pin1, int pin2, int pin3, int pin4);
    void Arm_L(int S[][2]);
    void Arm_L(int S[][3]);
    void Arm_L(int S[][4]);
    
    void Hand_R(int pin1);
    void Hand_R(int pin1, int pin2);
    void Hand_R(int pin1, int pin2, int pin3, int pin4, int pin5);
    void Hand_R(int S[]);
    void Hand_R(int S[][2]);
    void Hand_R(int S[][5]);
    
    void Hand_L(int pin1);
    void Hand_L(int pin1, int pin2);
    void Hand_L(int pin1, int pin2, int pin3, int pin4, int pin5);
    void Hand_L(int S[]);
    void Hand_L(int S[][2]);
    void Hand_L(int S[][5]);
    
    void Leg_R(int pin1, int pin2, int pin3);
    void Leg_R(int S[][3]);
    
    void Leg_L(int pin1, int pin2, int pin3);
    void Leg_L(int S[][3]);
    
    void Default_Head(int degree1);
    void Default_Head(int degree1, int degree2);
    
    void Default_Arm_R(int degree1, int degree2);
    void Default_Arm_R(int degree1, int degree2, int degree3);
    void Default_Arm_R(int degree1, int degree2, int degree3, int degree4);
    
    void Default_Arm_L(int degree1, int degree2);
    void Default_Arm_L(int degree1, int degree2, int degree3);
    void Default_Arm_L(int degree1, int degree2, int degree3, int degree4);
    
    void Default_Hand_R(int degree1);
    void Default_Hand_R(int degree1, int degree2);
    void Default_Hand_R(int degree1, int degree2, int degree3, int degree4, int degree5);
    
    void Default_Hand_L(int degree1);
    void Default_Hand_L(int degree1, int degree2);
    void Default_Hand_L(int degree1, int degree2, int degree3, int degree4, int degree5);
    
    void Clock(float t);
    void Move();
    void Move(int d);
    void ResetTime();
    void Hello();
    void Greet();
    void Yes();
    void No();
    void Punch(String s, String mov);
    void Macarena();
    void LetItGo();
    void ThisShitIsBananas();
    void Hello(int d);
    void Greet(int d);
    void Yes(int d);
    void No(int d);
    void Punch(int d);
    void Macarena(int d);
    void Turn();
    void Freeze();
    void Walking();
    void Unfreeze();
    void Relax();
    void Fight();
    void TPose();
    void Head();
    void Arm_R();
    void Arm_L();
    void Hand_R();
    void Hand_L();
  private:
   int i;
    int _pin1;
    int _pin2;
    int _pin3;
    int _pin4;
    int _pin5;
    int _pin6;
    int _pin7;
    int _pin8;
    int _pin9;
    int _pin10;
    int _pin11;
    int _pin12;
    int _pin13;
    int _pin14;
    int _pin15;
    int _pin16;
    int _pin17;
    int _pin18;
    int _pin19;
    int _pin20;
    int _pin21;
    int _pin22;
    int _pin23;
    int _pin24;
    int _pin25;
    int _pin26;
    int _pin27;
    int _pin28;
    int _pin29;
    int _pin30;
    int _pin31;
    int _pin32;
    int _pin33;
    int _pin34;
    int _pin35;
    int _pin36;
    int _pin37;
    int _pin38;
    int _pin39;
    int _pin40;
    int _pin41;
    int _pin42;
    int _pin43;
    int _pin44;
    int _pin45;
    int _pin46;
    int _pin47;
    int _pin48;
    int _pin49;
    int _pin50;
    int _pin51;
    int _pin52;
    int _pin53;
    int _pin54;
    int D1;
    int D2;
    int D3;
    int D4;
    int D5;
    int D6;
    int D7;
    int D8;
    int D9;
    int D10;
    int D11;
    int D12;
    int D13;
    int D14;
    int D15;
    int D16;
    int D17;
    int D18;
    int D19;
    int D20;
    int D21;
    int D22;
    int D23;
    int D24;
    int D25;
    int D26;
    int D27;
    int D28;
    int D29;
    int D30;
    int D31;
    int D32;
    int D33;
    int D34;
    int D35;
    int D36;
    int D37;
    int D38;
    int D39;
    int D40;
    int D41;
    int D42;
    int D43;
    int D44;
    int D45;
    int D46;
    int D47;
    int D48;
    int D49;
    int D50;
    int D51;
    int D52;
    int D53;
    int D54;
    int pos1;
    int pos2;
    int pos3;
    int pos4;
    int pos5;
    int pos6;
    int pos7;
    int pos8;
    int pos9;
    int pos10;
    int pos11;
    int pos12;
    int pos13;
    int pos14;
    int pos15;
    int pos16;
    int pos17;
    int pos18;
    int pos19;
    int pos20;
    int pos21;
    int pos22;
    int pos23;
    int pos24;
    int pos25;
    int pos26;
    int pos27;
    int pos28;
    int pos29;
    int pos30;
    int pos31;
    int pos32;
    int pos33;
    int pos34;
    int pos35;
    int pos36;
    int pos37;
    int pos38;
    int pos39;
    int pos40;
    int pos41;
    int pos42;
    int pos43;
    int pos44;
    int pos45;
    int pos46;
    int pos47;
    int pos48;
    int pos49;
    int pos50;
    int pos51;
    int pos52;
    int pos53;
    int pos54;
    float _t;
    float Time;
    float Restart;
    float Ticks;
    int Total_Ticks;
    int Future_Total_Ticks;
    float mil;
    float m;
    int m1;
    int milInTick;
    int _Head1[];
    int _Head[][2];
    int _Arm_R3[];
    int _Arm_R1[][2];
    int _Arm_R2[][3];
    int _Arm_R[][4];
    int _Arm_L3[];
    int _Arm_L1[][2];
    int _Arm_L2[][3];
    int _Arm_L[][4];
    int _Hand_R1[];
    int _Hand_R2[][2];
    int _Hand_R[][5];
    int _Hand_L1[];
    int _Hand_L2[][2];
    int _Hand_L[][5];
    int _Leg_R[][3];
    int _Leg_L[][3];
    int head;
    int arm_r;
    int arm_l;
    int hand_r;
    int hand_l;
    int leg_r;
    int leg_l;
};

#endif

